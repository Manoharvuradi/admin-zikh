// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model LocationData {
  id          Int              @id @unique @default(autoincrement())
  lat         Float
  lng         Float
  crimeType   String
  description String?
  cityDetails Json?
  createdAt   DateTime?        @default(now())
  updatedAt   DateTime?        @updatedAt
  createdBy   CredentialsUser? @relation("createdBy", fields: [createdById], references: [id])
  createdById Int?
  updatedBy   CredentialsUser? @relation("updatedBy", fields: [updatedById], references: [id])
  updatedById Int?
}

model CredentialsUser {
  id                    Int            @id @default(autoincrement())
  name                  String?
  email                 String?        @unique
  password              String
  LocationDataCreatedBy LocationData[] @relation("createdBy")
  LocationDataUpdatedBy LocationData[] @relation("updatedBy")
  crimeTipCreatedBy     CrimeTip[]     @relation("createdBy")
  crimeTipUpdatedBy     CrimeTip[]     @relation("updatedBy")
}

model CrimeTip {
  id            Int              @id @default(autoincrement())
  location      String
  city          String
  state         String
  zip           String
  latitude      Decimal
  longitude     Decimal
  tip           String
  personalInfo  String
  addtionalInfo String
  createdAt     DateTime?        @default(now())
  updatedAt     DateTime?        @updatedAt
  createdBy     CredentialsUser? @relation("createdBy", fields: [createdById], references: [id])
  createdById   Int?
  updateBy      CredentialsUser? @relation("updatedBy", fields: [updatedById], references: [id])
  updatedById   Int?
}

model SearchByState {
  id          Int           @id @default(autoincrement())
  stateName   String        @unique
  seachByCity SeachByCity[]
  latitude    Decimal?
  longitude   Decimal?
}

model SeachByCity {
  id              Int          @id @default(autoincrement())
  cityName        String       @unique
  seachByState    SearchByState @relation(fields: [searchByStateId], references: [id])
  searchByStateId Int
  latitude        Decimal?
  longitude       Decimal?
}
